{"version":3,"file":"sourcemap-codec.umd.js","sources":["../src/sourcemap-codec.ts"],"sourcesContent":["export type SourceMapSegment =\n  | [number]\n  | [number, number, number, number]\n  | [number, number, number, number, number];\nexport type SourceMapLine = SourceMapSegment[];\nexport type SourceMapMappings = SourceMapLine[];\n\nconst comma = ','.charCodeAt(0);\nconst semicolon = ';'.charCodeAt(0);\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\nconst intToChar = new Uint8Array(64); // 64 possible chars.\nconst charToInt = new Uint8Array(128); // z is 122 in ASCII\n\nfor (let i = 0; i < chars.length; i++) {\n  const c = chars.charCodeAt(i);\n  intToChar[i] = c;\n  charToInt[c] = i;\n}\n\n// Provide a fallback for older environments.\nconst td =\n  typeof TextDecoder !== 'undefined'\n    ? /* #__PURE__ */ new TextDecoder()\n    : typeof Buffer !== 'undefined'\n    ? {\n        decode(buf: Uint8Array) {\n          const out = Buffer.from(buf.buffer, buf.byteOffset, buf.byteLength);\n          return out.toString();\n        },\n      }\n    : {\n        decode(buf: Uint8Array) {\n          let out = '';\n          for (let i = 0; i < buf.length; i++) {\n            out += String.fromCharCode(buf[i]);\n          }\n          return out;\n        },\n      };\n\nexport function decode(mappings: string): SourceMapMappings {\n  const state: [number, number, number, number, number] = new Int32Array(5) as any;\n  const decoded: SourceMapMappings = [];\n\n  let index = 0;\n  do {\n    const semi = indexOf(mappings, index);\n    const line: SourceMapLine = [];\n    let sorted = true;\n    let lastCol = 0;\n    state[0] = 0;\n\n    for (let i = index; i < semi; i++) {\n      let seg: SourceMapSegment;\n\n      i = decodeInteger(mappings, i, state, 0); // genColumn\n      const col = state[0];\n      if (col < lastCol) sorted = false;\n      lastCol = col;\n\n      if (hasMoreVlq(mappings, i, semi)) {\n        i = decodeInteger(mappings, i, state, 1); // sourcesIndex\n        i = decodeInteger(mappings, i, state, 2); // sourceLine\n        i = decodeInteger(mappings, i, state, 3); // sourceColumn\n\n        if (hasMoreVlq(mappings, i, semi)) {\n          i = decodeInteger(mappings, i, state, 4); // namesIndex\n          seg = [col, state[1], state[2], state[3], state[4]];\n        } else {\n          seg = [col, state[1], state[2], state[3]];\n        }\n      } else {\n        seg = [col];\n      }\n\n      line.push(seg);\n    }\n\n    if (!sorted) sort(line);\n    decoded.push(line);\n    index = semi + 1;\n  } while (index <= mappings.length);\n\n  return decoded;\n}\n\nfunction indexOf(mappings: string, index: number): number {\n  const idx = mappings.indexOf(';', index);\n  return idx === -1 ? mappings.length : idx;\n}\n\nfunction decodeInteger(mappings: string, pos: number, state: SourceMapSegment, j: number): number {\n  let value = 0;\n  let shift = 0;\n  let integer = 0;\n\n  do {\n    const c = mappings.charCodeAt(pos++);\n    integer = charToInt[c];\n    value |= (integer & 31) << shift;\n    shift += 5;\n  } while (integer & 32);\n\n  const shouldNegate = value & 1;\n  value >>>= 1;\n\n  if (shouldNegate) {\n    value = -0x80000000 | -value;\n  }\n\n  state[j] += value;\n  return pos;\n}\n\nfunction hasMoreVlq(mappings: string, i: number, length: number): boolean {\n  if (i >= length) return false;\n  return mappings.charCodeAt(i) !== comma;\n}\n\nfunction sort(line: SourceMapSegment[]) {\n  line.sort(sortComparator);\n}\n\nfunction sortComparator(a: SourceMapSegment, b: SourceMapSegment): number {\n  return a[0] - b[0];\n}\n\nexport function encode(decoded: SourceMapMappings): string;\nexport function encode(decoded: Readonly<SourceMapMappings>): string;\nexport function encode(decoded: Readonly<SourceMapMappings>): string {\n  const state: [number, number, number, number, number] = new Int32Array(5) as any;\n  const bufLength = 1024 * 16;\n  const subLength = bufLength - 36;\n  const buf = new Uint8Array(bufLength);\n  const sub = buf.subarray(0, subLength);\n  let pos = 0;\n  let out = '';\n\n  for (let i = 0; i < decoded.length; i++) {\n    const line = decoded[i];\n    if (i > 0) {\n      if (pos === bufLength) {\n        out += td.decode(buf);\n        pos = 0;\n      }\n      buf[pos++] = semicolon;\n    }\n    if (line.length === 0) continue;\n\n    state[0] = 0;\n\n    for (let j = 0; j < line.length; j++) {\n      const segment = line[j];\n      // We can push up to 5 ints, each int can take at most 7 chars, and we\n      // may push a comma.\n      if (pos > subLength) {\n        out += td.decode(sub);\n        buf.copyWithin(0, subLength, pos);\n        pos -= subLength;\n      }\n      if (j > 0) buf[pos++] = comma;\n\n      pos = encodeInteger(buf, pos, state, segment, 0); // genColumn\n\n      if (segment.length === 1) continue;\n      pos = encodeInteger(buf, pos, state, segment, 1); // sourcesIndex\n      pos = encodeInteger(buf, pos, state, segment, 2); // sourceLine\n      pos = encodeInteger(buf, pos, state, segment, 3); // sourceColumn\n\n      if (segment.length === 4) continue;\n      pos = encodeInteger(buf, pos, state, segment, 4); // namesIndex\n    }\n  }\n\n  return out + td.decode(buf.subarray(0, pos));\n}\n\nfunction encodeInteger(\n  buf: Uint8Array,\n  pos: number,\n  state: SourceMapSegment,\n  segment: SourceMapSegment,\n  j: number,\n): number {\n  const next = segment[j];\n  let num = next - state[j];\n  state[j] = next;\n\n  num = num < 0 ? (-num << 1) | 1 : num << 1;\n  do {\n    let clamped = num & 0b011111;\n    num >>>= 5;\n    if (num > 0) clamped |= 0b100000;\n    buf[pos++] = intToChar[clamped];\n  } while (num > 0);\n\n  return pos;\n}\n"],"names":[],"mappings":"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ıÅΩ(ÿåh6ÿTË·§m65ñBº’ßm1€Ä˙¿=OñÉ¶`‚ÉcQ‡P1B|çùod0U€‡`Ì √!y”ÄÄ§‹!∏8"Ÿ¡›ÌI/ñS±éòBL|ÔÛZ`à[ıØ3’fZ =äç´ç¸'x«égRCp6ômQœl◊—Ú¯`∑b:≥˙VÅŒ◊–‡YTqç0u‹√Òo˜zFDt.,∫nG{∆∞p˙"âW*IúŒO2√!Éí⁄j_˚*_ìfìÔòàÀ Lç›∏lØ®√íπùàzpZU‡n…4ü0ƒÿ;È∂P∫=)∂≠jZÄd‘µäX—iè‰S⁄ICÁ&±ÇÇlœ¢üˆxLn»E›eö‚ËµåÑ„πÍ_≤åI∂–ªZN–≥pIeh2}Wƒ0î&<i§)Í‰…‘ËÏ)µ™ú$#+ß.J– 4R≥¬t|28"W€æßm5§G6Q
åQrÀ∂)˙#HñrF≤÷…@X§<∞£•7£ªâı.¸„·bh||ßÖ$ö,Pz"Vÿ"âÒfÌöÀ]¥(_IVÁ€≈OãjÓ>÷Ö”˘Ÿ™ãÓrJÎ”˜†`√H‚/hélhyº®ΩÍí4#)Ä:¢j™Z—p5zÜZiE5i—˛x`—…ÚLa¯´d\∑ˆEèì˛R$⁄=Ôñ…'.Zø∞Õ€É%–Ï—·æÍˆêqÙ2èuˆ˚Nâ{k0]cê·ôî*R[∆∫¯≤6età\q”€t¯|Ï9^(h&ìΩ¶óBXJô%hxó’Æ
Cc≠ˇC
¸Oq–ˆ∫_êÚ=Ë!∏åfâ≤gë‡KJ≥Ï.èäeGf/k[[˙z™G$ÚRÜ¸QyŸÂyÃâ—Ä>îõ…¢N˚˙‰†Ìˇ∞Çú‘ÊπÕ)z/nö›(°¨{z¶È%Â˛ê+cf¬™NUkÍLÉ©ãçµπÍz™°D‘ﬂΩ¯ì]›»¢©éå>’=Påﬂ⁄’£|ØÄZã5:¶¨•!∏<ı	GÅÄÄÏó…ı@}ÉÅ‡¨i}Ó<GWÇÈy%≠W≠F¸&∂Û0™Vc∫T‘x⁄U`D¨ß:=ëJ6À˝â©	XÉ£ÅıÚèWÊNÍ◊È?óŸ(ÎNÊ‰oÙ—S…¿(op}»∆≈/;T—àg◊Ô…ÎÕÂN¨Á∞ÊRÈ‹ ‹ÇB˘%=Y{‡F?Ú^¨$HÂÉﬂp
È1Ô'ﬂ(Óıê¶¸¯B€Ç˜≥zDç◊Ò¢Ví…U!]Û÷ê †ÍG≈x«∆†êƒu3N˝"`Mv®ËÙ]0É/¨gYS#äÑk3À-BMa"3¡@ﬂ∞Má<FÂüB®0T◊^ë ®ï•ÛKvªßSaÙ‰°°Ôœ>3C∂^:-è–ëñõ/ﬂcÙŸ*Œ°-≠‡È,—ëx©â¨!•\SGl˚Ú#vDw÷aL}~˚å+Q&$≤¬á°§ÂfΩt^Äòû:[©]∞ÿ\(_J”«än¨+uØITPñ9ïI∆E h∏Ñ≤ﬂºÉûèñCÎLl¬É+5⁄Úﬂêpaÿ*$©vfòU€`%€Ö“≠x#Bˆ⁄‘°¸7‡õN∑π YÜeƒ^Œ¶%FÀaOüÀ≠=G∞#Í4eîNw⁄ü4.≠Àè¨«km÷iÓÉé⁄áNk˘eÒ:ÈP“ŒÑ$Ò˜I$Àß`¡•]b˙bc∏wÉñ1`®àê<ÍbæÄlÚ%BÎrr=∞‚—	£+ÿ3d÷A#‹¸4!ËÓ”˜OPñ$êú€∞iòR5ÊÏrißÿ@ùS∆h€¸;`•‘ü@È™y–ru}‰¶IO>≠ü ¬0êÁSÛÀ¢à-‚X˛`bœEöá∞ªo¸õy|ÁwµLˆñÇ2	ÕP4®√Ì`ßjÌ0ì±çgEÛìjI2-}ıj˛[˚˚Si¶„<Xr°pŸq˜BÙÌäsC◊mõ⁄±Ë€ã{+ÿ™úãq”∫Ø›Ûlr}$˘B§3ª4IÆ@Gg]ÃÜùq0€ÑÍ*{L¯f8f9<©∂ ÀÊ/C;âºX(≠€≠4[£FtÇærÅn0Ôá∂‡íÀ…Fákff¯ﬂíåÎx4ÏLª¬ Ò~9P&a*⁄—‹*˛SjF‚Z£-õ„∂ˆn©í¥7ZLm∂∂"{¯¡|Dr∑√6#∫ƒQ…€h^—î;†L2Fﬂ∞àc:hŒ—NÒ≠hâ~œqH°Aâ62Èüˇè≥qH0óRÇE}|&-#©‚ö∏¶cl»ﬂ·Ù¢l‚òî'z`ûBáê*¥DwyR≠0FjtìG
À -‘´ù∆Ê•ì<)≤*U	óà»/¡CgÈqÎ«”Å¶ ÅáàmrŸ‚60 Dı*Îìé^kÅ˜¥6‡õÆµºœ Å=56
¶s%¨l:¯Üâa–c>»≠ıŸ*?[æ…é‘‡{‡!çW?ïVÕMU’5jO3®íµC·ﬂ°à√xu¨@%@µu` *rêÌ0†â¶g∂	:ŒŸŒâÒ@úfvA≥Á±YX}|∑™bf‹c"€á•CZ˜∞aÂyg√ÖÀàÌªè*Ø=ÿ”‰ºüD[Î∂-¯ñƒ8÷6´≠Tø·§ﬁÎîÍXHCWRã{fiÜè[pPR∫˝√	√Á<∞!Yûå¢ƒ ´∆±be¢^<ÄÜûR"[ó∞¥*Dº£"ƒ«ªÍè5¥»3è6∞J5PàI1a€LŸ4ò:Â¸∞Û0=Â{ÛèÕûŒã”Y§+î’!’7X icª å‘}2B]“ ˇ¡}ê`…#˛%8&c˛â∆~¬Ê©Çı†Ã˛P= ’∂[÷8^Îò˜`,ˆê1	qÒH¶M—˚ÿÚÕ√ eXMânéÀ∂i5ëmHw“ƒô§˙äj˜ôN—Y+£Qw‹¨jLS¬∫ 4ûÑâ‘tçùÍË‰b˛FÔJÏ%	â}’ëÌDÿLé∞¸∞‰¡EZiM{∫.˛XzV^ÛycõR9Å$ï√”ƒ‹¿V» $ò®xl) Ä‚C⁄∆cK√ßÂÌæÇ|–™Ñ ¢Ê® ;ÿ*$&:/©‚[KæW·√⁄˘¿ôÒ>Ë
3¸i“O2Á?8∆æØå‡‡ÔıÏ8gq*k‚∑å](∆_àÖ6µûOÃ0–àrÇ2;Cz∞äÀ˙
G˜ÿ¯S^}≠X’í⁄tµ`Ømà˜Îçj.≤OÊ·Ö¸‰¢$â∑´ÏúªË≤ÅfÏU.+aöB™É"èR%ñŸ}–QJÿñÉlxèC5PñìŒÔ•5€ï÷¡á—íåÿåËü™â:ƒTI¢Ï@®]‡ºÿÜhæà≠¿Ö‡yâjù{ÊI≠l¨µâÕ∫Ã§2nıë‹vŸ	Íâ›É˙¬ƒÉ){˘Ÿ¸•ˇ€øÒ≈Æ•cNß¨‘ì¥tz¶¨òïû6iäÖs‰+n⁄J<Kåö:2j≤ΩD™ÌCz‘désÓhûîΩ|˛}]h¬j±ù±&ÀÂ Ä
◊'8+è£ü≈Ógû(}—&HoÏ¶Ù¥e!⁄∏d(ôm™ñAL±≈…Ou‹Bzƒ©`ÀÀ≥£O⁄Ù’úg~BŒDv√Øèâ¶çjj;≤ B</PA–Ã*#fƒy©≥≥`Vl“vh:5rH∂I}ˇ•E™ôì'"(ãÛ ÿHå<"ÌÔ1ˆe¥Tã+ú≠4w§qXï⁄l±4îÇr)ÃñFE6‘K5xa7·≥&¡ »[#(i¶l¿«˛x…Éˆ"zÉ Ÿª#
ªg∂–§1ﬂíië=¬Ñà‚X0r* >dÙÅ›∞¸â5J99åqßaØª0DùAÜ™YdQT†Q´ò¨ónµ¿ÍÁ‹≥R¢-˚€y_ÿ;ıBl©gAø±m`/TÖ÷»ÿú¢9?/îhL∂›¥äœÄ„‰“Ω”éM¡W55Pöù™]ﬂòØK€\SAˆ≥Ö2ΩKx<ﬁ¢ÁfÚÇ∂2%?l2˘(t—Ÿ27
s5÷™É[ê¥¶]))Xù$›´c28{As»p8˜4t≤2òÌàS6uº†0¥ì e¡i&piú4{'"ô“Õ∂Kºÿ´aJ∞(ÓJ∏GûS2´#ÛÍ'ñ‡Ë,‡FP6*±ÿ’™`ŸãÒÕµàS>´‘D#Ü¿}jk˙1Ø…g≠ÎπµÚ/Á≠+JéaXñ±q=µt’KQnËc6§∑„/ïI« Öçs'’˛…ÏÊƒJãõ©üm$ãtÍ„Gí⁄Kv##ß6Ã`®_%p—C πƒQ≤
ÄçtÊ/^€	`∂Bs ºo@_%≥√ú.¨©©"˝s≈VaJ}F:'í˘\ZîÏÌûÛt‚1πWL’”Zbé2‘FgΩ¿	öÌ	iR¯Rì&ÊÖ9	6u|h$Ö8óﬂ·)‡ép¨°sGáñæFv~™‘î´®Ræ”ÛFFÄ∂b¡ÄÇ$íÏÉ09Î:ãyÃÂ1Mºm≈Ö˘∏L•MVÍÖ)AôOÊøm1:ˆ»c]ô∫%ı¥kΩòM⁄K]§›°„æqZŸŸas;ÊÿƒQ∞>}Gﬂ©+ßÊc4™5]Æq∞ø¨5MV%{úésŒ¯Äúﬂ\‹vâjâ)ÛbuÄí”BÂ˚Ì